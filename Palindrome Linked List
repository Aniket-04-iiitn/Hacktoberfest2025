class Solution {
public:


    bool isPalindrome(ListNode* head) {

        if(!head || !head->next)
          return true;
        
        ListNode* slow = head;
        ListNode* fast = head;

        while(fast && fast->next){
            slow = slow->next;
            fast = fast->next->next;
        }

        ListNode* head1 = nullptr;
        while(slow){
            ListNode*newnode = slow->next;
            slow->next = head1;
            head1 = slow;
            slow = newnode;
        }

        ListNode* firsthalf = head;
        ListNode* secondhalf = head1;

        while (secondhalf) {
            if (firsthalf->val != secondhalf->val)
            return false;
            firsthalf = firsthalf->next;
            secondhalf = secondhalf->next;
        }

    return true;

    }
};
